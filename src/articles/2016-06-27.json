{
  "id": "tensorflow-data",
  "title": "TensorFlowによるデータの読み込み",
  "created_at": "2016-06-27T00:00:00.000Z",
  "updated_at": "2016-06-27T00:00:00.000Z",
  "draft": false,
  "tags": "TensorFlow",
  "bodyContent": "",
  "bodyHtml": [
    "<div class=\"Box-body readme blob js-code-block-container p-5 p-xl-6 gist-border-0\" id=\"readme\">",
    "<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p>※ 本記事は Qiita に 2016年6月27日に投稿した記事を移植したものです。</p>",
    "<hr/>",
    "<p>TensorFlowにおける、ファイルからのデータ読み取り機構を、一連の流れとして分解してみました。",
    "CIFAR-10のバイナリ画像データをどのように取り込み、Queueを活用し、Sessionでテンソルとしてグラフに流しているのかの参考になるかと思います。</p>",
    "<p>分かったこととしては</p>",
    "<ul>",
    "<li>公式の<a href=\"https://www.tensorflow.org/versions/r0.9/how_tos/reading_data/index.html\" rel=\"nofollow\">Reading data</a>にある通り、",
    "ファイルからの読み取りは7つのステップに沿って行われる</li>",
    "<li>FilenameQueueをかませるのは、データのシャッフルや複数スレッドでの処理の実行のため次の構造が使われている</li>",
    "</ul>",
    "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-s1\">tf</span>.<span class=\"pl-v\">Graph</span>().<span class=\"pl-en\">as_default</span>()",
    "",
    "    <span class=\"pl-s1\">sess</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">tf</span>.<span class=\"pl-v\">Session</span>()",
    "    <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">train</span>.<span class=\"pl-en\">start_queue_runners</span>(<span class=\"pl-s1\">sess</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">sess</span>)",
    "",
    "    <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>():",
    "        <span class=\"pl-s1\">sess</span>.<span class=\"pl-en\">run</span>([ .. ])</pre></div>",
    "<p>などです。</p>",
    "<p>また、<a href=\"http://qiita.com/knok/items/2dd15189cbca5f9890c5\" rel=\"nofollow\">TensorFlowのReaderクラスを使ってみる</a>は",
    "jpeg画像の扱い方の最も重要な部分を解説してくれているので、合わせてご参照ください。</p>",
    "<p>/tmp/cifar10_data/..としてcifar10のデータが保存されているとしています。",
    "次のコードを走らせると、画像データがテンソルとして出力されます。",
    "このスクリプトはcifar10 tutorialの大量の関数から、データの読み込みと前処理の基本的な部分を抜き出してきたものです。",
    "より多くの処理を施す場合はcifar10_input.pyを参照してください。</p>",
    "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\">#coding:utf-8</span>",
    "",
    "<span class=\"pl-c\"># Cifar10の image file を読み込んでテンソルに変換するまで.</span>",
    "<span class=\"pl-k\">import</span> <span class=\"pl-s1\">tensorflow</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">tf</span>",
    "",
    "<span class=\"pl-v\">FLAGS</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">app</span>.<span class=\"pl-s1\">flags</span>.<span class=\"pl-v\">FLAGS</span>",
    "<span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">app</span>.<span class=\"pl-s1\">flags</span>.<span class=\"pl-v\">DEFINE_integer</span>(<span class=\"pl-s\">'max_steps'</span>, <span class=\"pl-c1\">1</span>,",
    "                            <span class=\"pl-s\">\"\"\"Number of batches to run.\"\"\"</span>)",
    "<span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">app</span>.<span class=\"pl-s1\">flags</span>.<span class=\"pl-v\">DEFINE_integer</span>(<span class=\"pl-s\">'batch_size'</span>, <span class=\"pl-c1\">128</span>,",
    "                            <span class=\"pl-s\">\"\"\"Number of images to process in a batch.\"\"\"</span>)",
    "<span class=\"pl-v\">NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">50000</span>",
    "",
    "<span class=\"pl-k\">with</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-v\">Graph</span>().<span class=\"pl-en\">as_default</span>(): ",
    "  <span class=\"pl-c\"># 1. ファイル名のリスト</span>",
    "  <span class=\"pl-s1\">filenames</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'/tmp/cifar10_data/cifar-10-batches-bin/data_batch_1.bin'</span>,",
    "    <span class=\"pl-s\">'/tmp/cifar10_data/cifar-10-batches-bin/data_batch_2.bin'</span>,",
    "        <span class=\"pl-s\">'/tmp/cifar10_data/cifar-10-batches-bin/data_batch_3.bin'</span>, ",
    "        <span class=\"pl-s\">'/tmp/cifar10_data/cifar-10-batches-bin/data_batch_4.bin'</span>, ",
    "        <span class=\"pl-s\">'/tmp/cifar10_data/cifar-10-batches-bin/data_batch_5.bin'</span>]",
    "    <span class=\"pl-c\"># 2. ファイル名のシャッフルはなし</span>",
    "    <span class=\"pl-c\"># 3. epoch limitの設定もなし</span>",
    "",
    "",
    "    <span class=\"pl-c\"># 4. 「ファイル名リスト」のqueueの作成</span>",
    "  <span class=\"pl-s1\">filename_queue</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">train</span>.<span class=\"pl-en\">string_input_producer</span>(<span class=\"pl-s1\">filenames</span>)",
    "",
    "",
    "  <span class=\"pl-c\"># 5. データのフォーマットにあったreaderの作成</span>",
    "  <span class=\"pl-k\">class</span> <span class=\"pl-v\">CIFAR10Record</span>(<span class=\"pl-s1\">object</span>):",
    "    <span class=\"pl-k\">pass</span>",
    "  <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">CIFAR10Record</span>()",
    "",
    "  <span class=\"pl-s1\">label_bytes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span> ",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">height</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">32</span>",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">width</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">32</span>",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">depth</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">3</span>",
    "  <span class=\"pl-s1\">image_bytes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">height</span> <span class=\"pl-c1\">*</span> <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">width</span> <span class=\"pl-c1\">*</span> <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">depth</span>",
    "  <span class=\"pl-s1\">record_bytes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">label_bytes</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">image_bytes</span>",
    "",
    "  <span class=\"pl-s1\">reader</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-v\">FixedLengthRecordReader</span>(<span class=\"pl-s1\">record_bytes</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">record_bytes</span>)",
    "",
    "  <span class=\"pl-c\">##readerにqueueを渡してファイルを開く</span>",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">key</span>, <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">reader</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-s1\">filename_queue</span>)",
    "",
    "",
    "  <span class=\"pl-c\"># 6. readの結果からデータをdecode</span>",
    "  <span class=\"pl-s1\">record_bytes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">decode_raw</span>(<span class=\"pl-s1\">value</span>, <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">uint8</span>)",
    "",
    "",
    "    <span class=\"pl-c\"># 7. データの整形</span>",
    "    <span class=\"pl-c\"># 7-1. 基本的な整形</span>",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">label</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">cast</span>(<span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">slice</span>(<span class=\"pl-s1\">record_bytes</span>, [<span class=\"pl-c1\">0</span>], [<span class=\"pl-s1\">label_bytes</span>]), <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">int32</span>)",
    "  <span class=\"pl-s1\">depth_major</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">reshape</span>(<span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">slice</span>(<span class=\"pl-s1\">record_bytes</span>, [<span class=\"pl-s1\">label_bytes</span>], [<span class=\"pl-s1\">image_bytes</span>]),",
    "                                [<span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">depth</span>, <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">height</span>, <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">width</span>])",
    "  <span class=\"pl-s1\">result</span>.<span class=\"pl-s1\">uint8image</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">transpose</span>(<span class=\"pl-s1\">depth_major</span>, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>])",
    "",
    "  <span class=\"pl-s1\">read_input</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">result</span>",
    "  <span class=\"pl-s1\">reshaped_image</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">cast</span>(<span class=\"pl-s1\">read_input</span>.<span class=\"pl-s1\">uint8image</span>, <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">float32</span>)",
    "  <span class=\"pl-s1\">float_image</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">reshaped_image</span>",
    "",
    "  <span class=\"pl-c\"># 7-2. データのシャッフルの準備</span>",
    "  <span class=\"pl-s1\">min_fraction_of_examples_in_queue</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0.4</span>",
    "  <span class=\"pl-s1\">min_queue_examples</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">int</span>(<span class=\"pl-v\">NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN</span> <span class=\"pl-c1\">*</span>",
    "                            <span class=\"pl-s1\">min_fraction_of_examples_in_queue</span>)",
    "  <span class=\"pl-en\">print</span> (<span class=\"pl-s\">'Filling queue with %d CIFAR images before starting to train. '</span>",
    "            <span class=\"pl-s\">'This will take a few minutes.'</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">min_queue_examples</span>)",
    "",
    "    <span class=\"pl-c\"># 7-3. バッチの作成(シャッフル有り)</span>",
    "  <span class=\"pl-s1\">batch_size</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">FLAGS</span>.<span class=\"pl-s1\">batch_size</span>",
    "  <span class=\"pl-s1\">num_preprocess_threads</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">16</span>",
    "  <span class=\"pl-s1\">images</span>, <span class=\"pl-s1\">label_batch</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">train</span>.<span class=\"pl-en\">shuffle_batch</span>(",
    "  [<span class=\"pl-s1\">float_image</span>, <span class=\"pl-s1\">read_input</span>.<span class=\"pl-s1\">label</span>],",
    "        <span class=\"pl-s1\">batch_size</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">batch_size</span>,",
    "        <span class=\"pl-s1\">num_threads</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">num_preprocess_threads</span>,",
    "        <span class=\"pl-s1\">capacity</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">min_queue_examples</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">3</span> <span class=\"pl-c1\">*</span> <span class=\"pl-s1\">batch_size</span>,",
    "        <span class=\"pl-s1\">min_after_dequeue</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">min_queue_examples</span>)",
    "",
    "  <span class=\"pl-s1\">images</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">images</span>",
    "  <span class=\"pl-s1\">labels</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-en\">reshape</span>(<span class=\"pl-s1\">label_batch</span>, [<span class=\"pl-s1\">batch_size</span>])",
    "",
    "",
    "  <span class=\"pl-c\"># 8. 実行</span>",
    "  <span class=\"pl-s1\">sess</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">tf</span>.<span class=\"pl-v\">Session</span>()",
    "  <span class=\"pl-s1\">tf</span>.<span class=\"pl-s1\">train</span>.<span class=\"pl-en\">start_queue_runners</span>(<span class=\"pl-s1\">sess</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">sess</span>)",
    "  <span class=\"pl-k\">for</span> <span class=\"pl-s1\">step</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">xrange</span>(<span class=\"pl-v\">FLAGS</span>.<span class=\"pl-s1\">max_steps</span>):",
    "    <span class=\"pl-s1\">img_label</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">sess</span>.<span class=\"pl-en\">run</span>([<span class=\"pl-s1\">images</span>, <span class=\"pl-s1\">labels</span>])",
    "    <span class=\"pl-en\">print</span>(<span class=\"pl-s1\">img_label</span>)",
    "  <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"FIN.\"</span>)</pre></div>",
    "</article>",
    "</div>"
  ],
  "dir": "src/articles",
  "base": "2016-06-27.json",
  "ext": ".json",
  "sourceBase": "2016-06-27.md",
  "sourceExt": ".md"
}