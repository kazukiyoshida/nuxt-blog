{
  "id": "closure",
  "title": "クロージャを使った問題解決",
  "created_at": "2019-07-31T00:00:00.000Z",
  "updated_at": "2019-07-31T00:00:00.000Z",
  "draft": false,
  "tags": "TypeScript,Vue.js",
  "bodyContent": "",
  "bodyHtml": [
    "<div class=\"Box-body readme blob js-code-block-container p-5 p-xl-6 gist-border-0\" id=\"readme\">",
    "<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p>※ 本記事は Qiita に 2019年7月31日に投稿した記事を加筆編集したものです。</p>",
    "<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"#はじめに\" id=\"user-content-はじめに\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>はじめに</h2>",
    "<p>クロージャ（Closure）の概念を初めて知った時の感想は「どう使うんだろう？」でした。",
    "それ以来、色々な言語でクロージャのサンプルを実装したりしながらも、",
    "実際にクロージャを活用して綺麗に問題を解決するということはありませんでした。",
    "それがつい先日、画面機能を実装している中でちょうど良い問題をクロージャで解決できました。",
    "少しトリッキーではありますが自分なりに少し嬉しかったので、クロージャの簡単な解説を交えながらご紹介したいと思います。</p>",
    "<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"#クロージャとは\" id=\"user-content-クロージャとは\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>クロージャとは</h2>",
    "<p>クロージャとは、<del>誤解があるかもしれませんが、「自分の外に、自分以外がアクセスできない変数を持った関数」と理解しています。</del>",
    "（2021年追記）正確には「関数と、その周囲の状態（レキシカル環境）への参照の組み合わせ」という説明の方が適切でした。",
    "これを利用して、上記のような性質の関数を作成できる、ということです。</p>",
    "<p>具体的に、簡単なクロージャを作ると下のようになります。</p>",
    "<div class=\"highlight highlight-source-shell\"><pre>$ ts-node",
    "<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">createClosure()</span> {",
    "    const str = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello world<span class=\"pl-pds\">\"</span></span>",
    "    <span class=\"pl-en\">return</span> () =<span class=\"pl-k\">&gt;</span> {",
    "      console.log(s)",
    "    }",
    "  }",
    "undefined",
    "<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">createClosure</span>()",
    "[Function]",
    "<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">createClosure()</span>()",
    "hello world",
    "undefined</pre></div>",
    "<p>createClosure 関数は無名関数を返しており、この無名関数がまさにクロージャです。",
    "このクロージャは内部に変数を持たず、自分の外側にある str という変数にアクセスしています。",
    "この str という変数にはクロージャ自身（と createClosure 関数）しかアクセスできないようになっています。</p>",
    "<p>このように、関数であるにもかかわらず状態を保持し、",
    "<del>擬似的な Private 変数を扱うことができるのがクロージャ、と自分なりに理解しています。</del>",
    "（厳密には、クロージャは関数でなくても定義可能であったり、あるいはHaskellといった純粋関数型言語にもクロージャの概念が導入できるようです）</p>",
    "<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"#クロージャを用いた問題解決の具体例\" id=\"user-content-クロージャを用いた問題解決の具体例\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>クロージャを用いた問題解決の具体例：</h2>",
    "<p>画面実装時に「全ての項目を選択するボタン」を実装したのですが、そこでクロージャを活用しました。",
    "今回はその時の実装を参考に、簡略化したアプリケーションとして再現しました。</p>",
    "<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"#すべてを選択するボタンの実装\" id=\"user-content-すべてを選択するボタンの実装\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>「すべてを選択するボタン」の実装</h3>",
    "<p><a href=\"https://github.com/kazukiyoshida/nuxt-blog/blob/master/src/assets/images/20190731/closure1.gif\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"sample.gif\" src=\"https://github.com/kazukiyoshida/nuxt-blog/raw/master/src/assets/images/20190731/closure1.gif\" style=\"max-width:100%;\"/></a></p>",
    "<p>画面のイメージは図のようになります。最近はまっている筋トレを題材にしました。",
    "画面に表示するデータはAPI経由で取得している都合上、</p>",
    "<ul>",
    "<li>項目の数が動的に増減する</li>",
    "<li>項目が複数カテゴリに分けられているため「全ての項目を選択する」ボタンの数自体も動的に増減させる</li>",
    "</ul>",
    "<p>という仕様を満たす必要がありました。「全ての項目を選択する」ボタンが1つであればどう実装してもシンプルになりそうですが、",
    "<strong>動的な内容が多かったためクロージャの威力が発揮された</strong>ように思います。</p>",
    "<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"#すべてを選択するボタンとクロージャの相性が良い点\" id=\"user-content-すべてを選択するボタンとクロージャの相性が良い点\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>「すべてを選択するボタン」とクロージャの相性が良い点</h3>",
    "<p>「すべてを選択するボタン」は 1.チェックがない状態からチェックを付けられるパターン と",
    "2.チェックが付けられた状態からチェックを外されるパターン でそれぞれ動作が異なります。</p>",
    "<p><a href=\"https://github.com/kazukiyoshida/nuxt-blog/blob/master/src/assets/images/20190731/closure2.png\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"sample.png\" src=\"https://github.com/kazukiyoshida/nuxt-blog/raw/master/src/assets/images/20190731/closure2.png\" style=\"max-width:100%;\"/></a></p>",
    "<p>つまり、「すべてを選択するボタン」は、一度呼び出されると全項目を追加し、次に呼び出されると全項目を削除し、",
    "次に呼び出されると全項目を追加し、、、これはまさにクロージャで表現できる機能に見えます。</p>",
    "<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"#実際のコード\" id=\"user-content-実際のコード\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>実際のコード</h3>",
    "<p>このように、「全項目を追加したり、全項目を削除する」という処理を check という名前のクロージャとして実装し、",
    "これを allChecker オブジェクトに持たせるようにしました。",
    "check クロージャの内部には「チェックが付けられているかどうか」を表す状態を持たせています。",
    "処理と状態を合わせた、まさにクロージャとして活用しています。</p>",
    "<p>また、上半身、下半身などカテゴリごとに「全てを選択するボタン」を用意するので、",
    "同じ数だけ allChecker オブジェクトを用意します。</p>",
    "<p>allChecker オブジェクトを作成するのは createAllChecker 関数が担います。</p>",
    "<p><code>@click=\"allCheckers[part.bodyPartsName].check()</code>",
    "この1行にある通り、全てを選択するのラジオボタンをクリックする度に、allChecer の check 関数が呼び出されています。",
    "check 関数は1回呼び出される度に処理を変えるクロージャです。</p>",
    "<p>今回は動的な要素が多かったため、これをクロージャなしで実装すると余分な変数やマッチング処理がかなり増えてしまうのではないかなと思います。</p>",
    "<p>ということで、最終的なコードは下のようになりました。サンプルアプリの全コードはこちらに上げてあります。<br/>",
    "<a href=\"https://github.com/kazukiyoshida/sample-allchecker-vue\">kazukiyoshida/sample-allchecker-vue</a></p>",
    "<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">template</span> <span class=\"pl-c1\">lang</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"pug\"</span><span class=\"pl-c1\">&gt;</span>",
    ".div.allWrap",
    "  p <span class=\"pl-c1\">&gt;&gt;</span> <span class=\"pl-v\">AllCheckers</span>",
    "  <span class=\"pl-s1\">p</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">this</span><span class=\"pl-kos\">.</span>allCheckers <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>",
    "  p <span class=\"pl-c1\">&gt;&gt;</span> <span class=\"pl-s1\">選択された筋肉（部位ごと）</span>",
    "  <span class=\"pl-s1\">p</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">this</span><span class=\"pl-kos\">.</span>checkedMusclesByParts <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>",
    "  template(v-for=\"part in this.menu\")",
    "    .partWrap",
    "      span.part 【部位】<span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">part</span><span class=\"pl-kos\">.</span>bodyPartsName <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>",
    "      p",
    "        input(",
    "          type=\"checkbox\"",
    "          @click=\"allCheckers[part.bodyPartsName].check()\"",
    "        )",
    "        span すべての筋肉を選択",
    "        template(v-for=\"muscle in part.muscles\")",
    "          p",
    "            input(",
    "              type=\"checkbox\"",
    "              :value=\"muscle\"",
    "              v-model=\"checkedMusclesByParts[part.bodyPartsName]\"",
    "            )",
    "            span <span class=\"pl-kos\">{</span><span class=\"pl-kos\">{</span> muscle <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span>",
    "<span class=\"pl-c1\">&lt;</span>/<span class=\"pl-ent\">template</span><span class=\"pl-c1\">&gt;</span>",
    "",
    "<span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">script</span> <span class=\"pl-s1\">lang</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"ts\"</span><span class=\"pl-c1\">&gt;</span>",
    "<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> Component<span class=\"pl-kos\">,</span> Vue <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'nuxt-property-decorator'</span>",
    "<span class=\"pl-k\">import</span> <span class=\"pl-s1\">_</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'lodash'</span>",
    "<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span>",
    "<span class=\"pl-v\">ITrainingMenu</span>",
    "<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'../interfaces/menu'</span>",
    "",
    "@<span class=\"pl-v\">Component</span>",
    "<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-k\">class</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">Vue</span> <span class=\"pl-kos\">{</span>",
    "",
    "  <span class=\"pl-c\">// API経由で取得したデータは store に保存してあるので、そこからデータを取得</span>",
    "  <span class=\"pl-c1\">public</span> <span class=\"pl-k\">get</span> <span class=\"pl-en\">menu</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-v\">ITrainingMenu</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span> | <span class=\"pl-c1\">null</span> <span class=\"pl-kos\">{</span>",
    "    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">$store</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">state</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">training</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">menu</span>",
    "  <span class=\"pl-kos\">}</span>",
    "",
    "  <span class=\"pl-c\">// 選択された筋肉の一覧</span>",
    "  <span class=\"pl-c1\">public</span><span class=\"pl-kos\"></span> <span class=\"pl-c1\">checkedMusclesByParts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span>",
    "",
    "  <span class=\"pl-c\">//「すべての筋肉を選択する」を実行する allChecker を、全ての部位について集めたもの</span>",
    "  <span class=\"pl-c1\">public</span><span class=\"pl-kos\"></span> <span class=\"pl-c1\">allCheckers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span>",
    "",
    "  <span class=\"pl-c\">// 「すべての筋肉を選択する」を実行する allChecker を作成する.</span>",
    "  <span class=\"pl-c1\">public</span><span class=\"pl-kos\"></span> <span class=\"pl-en\">createAllChecker</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">partsName</span>: <span class=\"pl-s1\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>",
    "    <span class=\"pl-c\">// 選択されているかどうかのフラグ</span>",
    "    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">isChecked</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">false</span>",
    "    <span class=\"pl-c\">// 指定したパーツにおける全ての筋肉のリスト</span>",
    "    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">allMuscles</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">_</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">menu</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'bodyPartsName'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">partsName</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">muscles</span>",
    "",
    "    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>",
    "      <span class=\"pl-c\">// check 関数はクロージャ</span>",
    "      <span class=\"pl-c1\">check</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>: <span class=\"pl-k\">void</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>",
    "",
    "        <span class=\"pl-c\">// チェックなし -&gt; チェックあり：要素の追加</span>",
    "        <span class=\"pl-c1\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">isChecked</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>",
    "          const <span class=\"pl-s1\">diff</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">_</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">difference</span><span class=\"pl-kos\">(</span>",
    "            <span class=\"pl-s1\">allMuscles</span><span class=\"pl-kos\">,</span>",
    "            <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkedMusclesByParts</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">partsName</span><span class=\"pl-kos\">]</span>",
    "          <span class=\"pl-kos\">)</span>",
    "          <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkedMusclesByParts</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">partsName</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">diff</span><span class=\"pl-kos\">)</span>",
    "",
    "        <span class=\"pl-c\">// チェックあり -&gt; チェックなし：要素の削除</span>",
    "        <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>",
    "          <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkedMusclesByParts</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">partsName</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">_</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">without</span><span class=\"pl-kos\">(</span>",
    "            <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkedMusclesByParts</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">partsName</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>",
    "            ...<span class=\"pl-s1\">allMuscles</span>",
    "          <span class=\"pl-kos\">)</span>",
    "        <span class=\"pl-kos\">}</span>",
    "",
    "        <span class=\"pl-c\">// 最後にチェックをつける/はずす</span>",
    "        <span class=\"pl-s1\">isChecked</span> <span class=\"pl-c1\">=</span> !<span class=\"pl-s1\">isChecked</span>",
    "      <span class=\"pl-kos\">}</span>",
    "    <span class=\"pl-kos\">}</span>",
    "  <span class=\"pl-kos\">}</span>",
    "",
    "  <span class=\"pl-c\">// ライフサイクル</span>",
    "  <span class=\"pl-s1\">public</span><span class=\"pl-kos\"></span> <span class=\"pl-k\">async</span> <span class=\"pl-s1\">mounted</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>",
    "    <span class=\"pl-c\">// トレーニングデータを取得</span>",
    "    <span class=\"pl-k\">await</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">$store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'training/fetchTrainingMenu'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>",
    "",
    "    <span class=\"pl-s1\">_</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">menu</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">parts</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>",
    "      <span class=\"pl-c\">// allChecker を部位ごとに作成</span>",
    "      <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">$set</span><span class=\"pl-kos\">(</span>",
    "        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">allCheckers</span><span class=\"pl-kos\">,</span>",
    "        <span class=\"pl-s1\">parts</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bodyPartsName</span><span class=\"pl-kos\">,</span>",
    "        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createAllChecker</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">parts</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bodyPartsName</span><span class=\"pl-kos\">)</span>",
    "      <span class=\"pl-kos\">)</span>",
    "",
    "      <span class=\"pl-c\">// 「選択された筋肉一覧」を部位ごとに作成</span>",
    "      <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">$set</span><span class=\"pl-kos\">(</span>",
    "        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">checkedMusclesByParts</span><span class=\"pl-kos\">,</span>",
    "        <span class=\"pl-s1\">parts</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bodyPartsName</span><span class=\"pl-kos\">,</span>",
    "        <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>",
    "      <span class=\"pl-kos\">)</span>",
    "    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>",
    "  <span class=\"pl-kos\">}</span>",
    "<span class=\"pl-kos\">}</span>",
    "<span class=\"pl-c1\">&lt;</span>/<span class=\"pl-ent\">script</span><span class=\"pl-c1\">&gt;</span></pre></div>",
    "<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"#おわりに\" id=\"user-content-おわりに\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"><path d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\" fill-rule=\"evenodd\"></path></svg></a>おわりに</h2>",
    "<p>非常にニッチな例でしたが、具体的なクロージャを用いた問題解決の例をご紹介しました。",
    "まだまだ勉強中ですので、ご指摘ご意見などありましたらコメントいただけると幸いです。</p>",
    "<p>最後まで目を通していただきありがとうございます。</p>",
    "</article>",
    "</div>"
  ],
  "dir": "src/articles",
  "base": "2019-07-31.json",
  "ext": ".json",
  "sourceBase": "2019-07-31.md",
  "sourceExt": ".md"
}